var canvas = document.getElementById("canvas");
var processing = new Processing(canvas, function(processing) {
    processing.size(400, 400);
    processing.background(0xFFF);

    var mouseIsPressed = false;
    processing.mousePressed = function () { mouseIsPressed = true; };
    processing.mouseReleased = function () { mouseIsPressed = false; };

    var keyIsPressed = false;
    processing.keyPressed = function () { keyIsPressed = true; };
    processing.keyReleased = function () { keyIsPressed = false; };

    function getImage(s) {
        var url = "https://www.kasandbox.org/programming-images/" + s + ".png";
        processing.externals.sketch.imageCache.add(url);
        return processing.loadImage(url);
    }

    function getLocalImage(url) {
        processing.externals.sketch.imageCache.add(url);
        return processing.loadImage(url);
    }

    // use degrees rather than radians in rotate function
    var rotateFn = processing.rotate;
    processing.rotate = function (angle) {
        rotateFn(processing.radians(angle));
    };

    with (processing) {
      
var settings = {
    stroke : {
        strokeOn : true,
        lastStrokeOn : true,
    },
    color : color(125, 125, 125, 150),
};

var Stroke = function(r, g, b)
{
    if(settings.stroke.strokeOn)
    {
        stroke(r, g, b);
    }else{
        noStroke();    
    }
};

var keys = [];
keyPressed = function()
{
    keys[keyCode] = true;  
};
keyReleased = function()
{
    keys[keyCode] = false;  
};

var IsMouseInside = function(obj) 
{
    return  mouseX >  obj.xPos &&
            mouseX < (obj.xPos + obj.width) &&
            mouseY >  obj.yPos &&
            mouseY < (obj.yPos + obj.height);
};
var getPosOnGrid = function(grid)
{
    var Pos = {xPos : false, yPos : false};
    if(IsMouseInside(grid))
    {
        //convert mouse
        var fmouseX = (mouseX - (((grid.gridSize/2)) + grid.xPos));
        var fmouseY = (mouseY - (((grid.gridSize/2)) + grid.yPos));

        //adjust pos
        var cellX = round(fmouseX/grid.gridSize);
        var cellY = round(fmouseY/grid.gridSize);
        
        //give pos
        Pos = {xPos : cellX, yPos : cellY};
    }
    return Pos;
};
var keyCodeShouldBeEntered = function(code)
{
    return (code !== 157 && code !== 155 && code !== 144) &&
    ((code < 112 || code > 123) && (code < 37 || code > 40) && 
     (code < 16 || code > 20) && (code < 33 || code > 36));
};

var createArray = function(Obj)
{
    var arr = [];
    arr.refs = {};
    arr.Obj = Obj;
    arr.add = function(config)
    {
        this.refs[config.name] = this.length;
        this.push(new this.Obj(config));
    };
    arr.addMult = function(configs)
    {
        for(var i in configs)
        {
            this.add(configs[i]);    
        }
    };
    arr.getObj = function(name)
    {
        if(this.refs[name] !== undefined && 
        this[this.refs[name]] !== undefined)
        {
            return this[this.refs[name]]; 
        }else{
            return new this.Obj({});    
        }
    };
    arr.getIndex = function(name)
    {
        if(this.refs[name] !== undefined)
        {
            return this.refs[name]; 
        }else{
            return this.length - 1;    
        }
    };
    arr.remove = function(name)
    {
        this.splice(this.getIndex(name), 1);
        this.refs[name] = undefined;
    };
    arr.removeAll = function()
    {
        this.refs = {};
        this.splice(0, this.length);
    };
    arr.draw = function() 
    {
        for(var i = 0; i < this.length; i++)
        {
            this[i].draw();
        }
    };
    return arr;
};

var NormalObject = function(config)
{
    this.xPos = config.xPos;
    this.yPos = config.yPos;
    this.width = config.width;
    this.height = config.height;
    this.color = config.color;
      
    this.draw = function() 
    {
        fill(this.color);
        rect(this.xPos, this.yPos, this.width, this.height);
    };
};

var Button = function(config) 
{
    NormalObject.call(this, config);
    
    this.label = config.label;
    
    this.textSize = config.textSize || 15;
    this.XDiv = config.XDiv || 4;
    this.YDiv = config.YDiv || 1.5;
    
    if(config.textInfo === undefined)
    {
        config.textInfo = {};    
    }
    this.textInfo = {
        xPosOffset : config.textInfo.xPosOffset || 0,
        yPosOffset : config.textInfo.yPosOffset || 0,
    };
    
    this.mem = config.mem;
    this.textAlignX = config.textAlignX || NORMAL;
    this.textAlignY = config.textAlignY || NORMAL;
    
    this.editText = config.editText || function() {};
    
    this.draw = config.draw || function() 
    {
        fill(this.color);
        rect(this.xPos, this.yPos, this.width, this.height);
        
        fill(0, 0, 0);
        textSize(this.textSize);
        textAlign(this.TextAlignX, this.textAlignY);
        this.editText();
        text(this.label, 
        this.xPos + this.textInfo.xPosOffset + (this.width / this.XDiv), 
        this.yPos + this.textInfo.yPosOffset + (this.height / this.YDiv));
    };
    
    this.clickedOn = config.clickedOn || function() {};
};
var buttons = createArray(Button);
buttons.IsMouseInsideAny = function()
{
    var inside = false;
    for(var i = 0; i < this.length; i++)
    {
        if(IsMouseInside(this[i]))
        {
            inside = true;   
        }
    }
    return inside;
};

var ButtonBox = function(config)
{
    NormalObject.call(this, config);
    
    this.color = config.color || color(143, 143, 143, 125);
    
    this.buttons = createArray(Button);
    
    this.name = config.name;
    
    this.buttons.addMult(config.buttons || {});
    
    this.setup = function()
    {
        for(var i = 0; i < this.buttons.length; i++)
        {
            this.buttons[i].xPos += this.xPos;
            this.buttons[i].yPos += this.yPos;
        }
    };
    this.setup();
    
    this.drawOn = config.drawOn || function() {};
    
    this.draw = config.draw || function() 
    {
        fill(this.color);
        rect(this.xPos, this.yPos, this.width, this.height);
        
        this.buttons.draw();
        
        pushMatrix();
            translate(this.xPos, this.yPos);
            this.drawOn();
        popMatrix();
    };
};
var buttonBoxes = createArray(ButtonBox);

var TextBox = function(config)
{
    NormalObject.call(this, config);
    
    this.color = config.color || color(125, 125, 125, 100);
    this.offcolor = config.offcolor || color(125, 125, 125, 200);
    
    this.text = "";
    
    if(config.textInfo === undefined)
    {
        config.textInfo = {};    
    }
    this.textInfo = {
        xPosOffset : config.textInfo.xPosOffset || 0,
        yPosOffset : config.textInfo.yPosOffset || 0,
        maxLength  : config.textInfo.maxLength  || 1000,
    };
    
    this.editText = config.editText || function(){};
    
    this.active = false;
    
    this.draw = function()
    {
        if(this.active)
        {
            fill(this.color);
        }else{
            fill(this.offcolor);
        }
        rect(this.xPos, this.yPos, this.width, this.height);
        fill(0, 0, 0);
        textSize(13);
        this.editText();
        text(this.text, this.xPos + this.textInfo.xPosOffset, 
        this.yPos + this.textInfo.yPosOffset, this.width, this.height);
    };
    
    this.getText = function()
    {
        var text = this.text;
        text = text.slice(0, -1);
        return text;
    };
    this.setText = function(text)
    {
        this.text = text;   
    };
    
    this.mouseReleased = function()
    {
        if(IsMouseInside(this))
        {
            this.active = true;
        }else{
            this.active = false;
        }
    };
    this.keyPressed = function()
    {
        if(keyCodeShouldBeEntered(keyCode) && this.active)
        {
            if(keyCode === 8 && this.text.length > 1)
            {
                this.text = this.text.slice(0, -2);
                this.text += "|"; 
            }
            else if(this.text.length < this.textInfo.maxLength) 
            {
                this.text = this.text.slice(0, -1);
                this.text += key.toString();
                this.text += "|"; 
            }
        }
    };
};
var textBoxes = createArray(TextBox);
textBoxes.keyPressed = function()
{
    for(var i = 0; i < this.length; i++)
    {
        this[i].keyPressed();   
    }
};
textBoxes.mouseReleased = function()
{
    for(var i = 0; i < this.length; i++)
    {
        this[i].mouseReleased();   
    }
};

var savePictures = [];
savePictures.add = function(config)
{
    var img = {
        width : config.width || 160,
        height : config.height || 160,
    };
    for(var i in config)
    {
        img[i] = config[i];    
    }
    for(var col = 0; col < config.pixels.length; col++)
    {
        for(var row = 0; row < config.pixels[col].length; row++)
        {
            noStroke();
            fill(config.pixels[col][row]);
            rect(row * config.pixelSize, col * config.pixelSize,
            config.pixelSize, config.pixelSize);
        }
    }
    img.img = get(0, 0, config.pixels.length * config.pixelSize, 
    config.pixels[0].length * config.pixelSize);
    img.draw = function(xPos, yPos, width1, height1) 
    {
        image(img.img, xPos, yPos, width1 || img.width, height1 || img.height);
    };
    this.push(img);
    Stroke(0, 0, 0);
};

/* savePics */
savePictures.add({ name : "this", pixelSize : 10, backColor : undefined, pixels : [
});
savePictures.add({
        pixelSize : 10,
        name : 0,
        pixels : [ 
       [ -1,-1,-1,-11823488,-11823488,-1,-1,-1,-1,-11823488,-11823488,-1,-11823488,-11823488,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-11823488,-11823488,-11823488,-11823488,-11823488,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-11823488,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-11823488,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-11823488,-1,-1,-1,-11823488,-1,-1,-1,-1,-11823488,-1 ], [ -1,-1,-1,-1,-1,-11823488,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-1,-11823488,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-11823488,-1,-1,-11823488,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-1,-1,-1,-11823488,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-11823488,-1,-1,-11823488,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-11823488,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-11823488,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-11823488,-1,-1,-11823488,-11823488,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-11823488,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-11823488,-1,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-1,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-11823488,-11823488,-11823488,-1,-11823488,-11823488,-1,-11823488,-11823488,-11823488,-1,-11823488,-11823488,-11823488,-11823488,-1,-11823488,-11823488,-1,-11823488,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-1,-11823488,-1,-1,-11823488,-1,-11823488,-11823488,-11823488,-1,-11823488,-11823488,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-11823488,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-1,-1,-1,-1,-1,-1,-6730933,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], [ -1,-11823488,-1,-1,-1,-1,-1,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], ],
});    
savePictures.add({
    pixelSize : 10,
    name : 1,
    pixels : [
        [
127.5,127.5,127.5,127.5,-11850368,-11850368,127.5,-11850368,127.5,127.5,127.5,127.5,127.5,-11850368,127.5,127.5,127.5,127.5,127.5,127.5,127.5,127.5,-11850368,127.5,-1,127.5,127.5,127.5,127.5,-11850368,-11850368,127.5,127.5,127.5,127.5,-11850368,-1,-1,-11850368,127.5
        ],
        [
-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-1,-1,-11850368,-11850368
        ],
        [
-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368
        ],
        [
-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-1,-1,-1,-1,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-11850368,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-1,-1,-1,127.5,-1,-1,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-11850368
        ],
        [
-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-11850368
        ],
        [
-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-11850368
        ],
        [
-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,127.5,-1,127.5,-1,-1,-1,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-11850368
        ],
        [
-13824128,-1,-1,-1,-1,-1,-13824128,127.5,-1,-1,-1,-13824128,-1,-1,-1,-1,127.5,-1,-1,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-11850368
        ],
        [
-13824128,-1,-1,-13824128,-1,-1,-1,127.5,-1,127.5,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-11850368,127.5,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368
        ],
        [
-13824128,-1,-1,-1,-1,-1,-1,-1,127.5,-1,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-1,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-11850368,-11850368,-1,-11850368,-11850368
        ],
        [
-13824128,-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,127.5,-1,-1,-1,-1,-1,-13824128,-1,-1,-1,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368
        ],
        [
-13824128,-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-13824128,-11850368,127.5,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-11850368,127.5,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368
        ],
        [
-1,-13824128,-1,-13824128,-1,-1,-1,-1,-1,-1,127.5,-1,-1,127.5,-1,-1,127.5,-13824128,-1,-1,-1,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-11850368
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5
        ],
        [
-13824128,-1,-1,-1,-13824128,-13824128,-1,-1,-1,127.5,-1,127.5,-13824128,-13824128,-13824128,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5
        ],
        [
-13824128,-1,-1,-13824128,-1,-13824128,-13824128,-1,-1,-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5
        ],
        [
-13824128,-1,-1,-1,-1,-1,-13824128,-13824128,-13824128,-1,-1,-1,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-15740288,-15740288,-15740288,-15740288,-15740288,-15740288,-15740288,-15740288,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-15740288,-15740288,-15740288,-15740288,-15740288,-15740288,-15740288,-15740288,-15740288,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-1
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-15740288,-15740288,-15740288,-11850368,-11850368,-11850368,-13824128,-13824128,-13824128,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5
        ],
        [
-1,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13824128,-13824128,-13824128,-13824128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-1,-1
        ],
        [
-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-1,127.5,-1,-1,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-1
        ],
        [
127.5,127.5,127.5,127.5,127.5,127.5,127.5,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-1
        ],
        [
127.5,-11850368,127.5,127.5,127.5,127.5,127.5,127.5,-11850368,-11850368,-11850368,-11850368,-1,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-1
        ],
        [
127.5,127.5,-11850368,127.5,127.5,127.5,127.5,127.5,127.5,127.5,127.5,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,127.5,-1
        ],
        [
127.5,127.5,127.5,127.5,-11850368,127.5,127.5,127.5,127.5,-1,127.5,-1,127.5,-11850368,-11850368,-11850368,-1,-1,-1,-1,-1,-1,-1,-1,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-11850368,-1,-1,-1,-11850368,-11850368,127.5,-1
        ],
        [
127.5,127.5,-1,127.5,127.5,127.5,-15740288,127.5,127.5,127.5,127.5,127.5,127.5,127.5,127.5,-11850368,-11850368,-11850368,-11850368,-1,-11850368,-11850368,-11850368,-11850368,-11850368,-1,127.5,-1,-1,127.5,-1,-1,127.5,-11850368,-11850368,-11850368,-11850368,127.5,-1,-1
        ],
        [
127.5,127.5,127.5,127.5,127.5,127.5,-11850368,-1,127.5,127.5,127.5,127.5,127.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127.5,-1,127.5,127.5,-1,-1,-1
        ],

    ],
});
savePictures.add({ 
    pixelSize : 10, 
    name : 2, 
    pixels : [ 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-16777207,-16777207,-1,-16777207,-16777207,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-16777207,-6946816,-6946816,-16777207,-6946816,-6946816,-16777207,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-16777207,-6946816,-1,-3997687,-3997687,-6946816,-16777207,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-16777207,-6946816,-3997687,-6946816,-16777207,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-16777207,-6946816,-16777207,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-16777207,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-1,-1,-1,-1,-6946816,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        [ -1,-1,-1,-1,-6946816,-1,-1,-1,-3997687,-3997687,-1,-1,-1,-1,-1,-1,-6946816,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ], 
        [ -6946816,-1,-1,-1,-1,-1,-1,-1,-16777207,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 ],
        ], });
savePictures.add({
    pixelSize : 25,
    name : 3,
    height : 160, 
    pixels : [
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-6730933,-1,-1
        ],
        [
-1,-1,-6730933,-6730933,-6730933,-6730933,-6730933,-6730933,-6730933,-1,-1
        ],
        [
-1,-1,-6730933,-6730933,-6730933,-6730933,-6730933,-1,-6730933,-1,-1
        ],
        [
-1,-1,-6730933,-6730933,-6730933,-6730933,-6730933,-1,-6730933,-1,-1
        ],
        [
-1,-1,-6730933,-6730933,-6730933,-6730933,-6730933,-6730933,-6730933,-1,-1
        ],
        [
-1,-1,-1,-6730933,-6730933,-6730933,-6730933,-6730933,-6730933,-1,-1
        ],
        [
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
        ],
        [

        ],
        [

        ],

    ],
});
savePictures.add({
    pixelSize : 10,
    name : 4,
    pixels : [
        [
-13793281,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-9845761,-147,-147,-147,-147,-147,-147,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-19347,-19347,-147,-147,-147,-147,-147,-147,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-19347,-19347,-9845761,-9845761,-147,-147,-147,-147,-147,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-9845761,-9845761,-19347,-147,-147,-147,-147,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-147,-147,-147,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-9845761,-9845761,-9845761,-147,-147,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-9845761,-9845761,-9845761,-9845761,-38618,-9845761,-9845761,-19347,-9845761,-9845761,-19347,-19347,-19347,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-9845761,-38618,-38618,-38618,-38618,-38618,-38618,-16776961,-38618,-19347,-9845761,-9845761,-19347,-19347,-19347,-9845761,-147,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-38618,-38618,-38618,-13793281,-13793281,-13793281,-16776961,-38618,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-9845761,-19347,-147,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-9845761,-38618,-9845761,-38618,-16776961,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-19347,-9845761,-9845761,-9845761,-19347,-9845761,-9845761,-147,-147
        ],
        [
-9845761,-9845761,-9845761,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-9845761,-38618,-9845761,-38618,-38618,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-19347,-9845761,-9845761,-19347,-9845761,-9845761,-9845761,-9845761,-19347
        ],
        [
-9845761,-9845761,-38618,-38618,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-38618,-38618,-9845761,-38618,-9845761,-9845761,-38618,-38618,-38618,-16776961,-13793281,-38618,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-9845761,-9845761,-19347,-19347
        ],
        [
-9845761,-9845761,-38618,-13793281,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-38618,-38618,-13793281,-38618,-9845761,-9845761,-9845761,-19347,-9845761,-9845761,-9845761,-9845761,-19347,-9845761
        ],
        [
-9845761,-38618,-16776961,-13793281,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-16776961,-13793281,-13793281,-13793281,-16776961,-38618,-38618,-38618,-9845761,-38618,-16776961,-16776961,-16776961,-16776961,-13793281,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-9845761,-9845761
        ],
        [
-9845761,-38618,-13793281,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-16776961,-16776961,-13793281,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-9845761,-9845761
        ],
        [
-9845761,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-16776961,-38618,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-16776961,-38618,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-19347,-9845761,-9845761
        ],
        [
-9845761,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-16776961,-38618,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-38618,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-19347,-9845761,-9845761,-9845761
        ],
        [
-9845761,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-16776961,-16776961,-16776961,-38618,-16776961,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-38618,-38618,-16776961,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-38618,-16776961,-16776961,-38618,-16776961,-38618,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-38618,-38618,-16776961,-16776961,-9845761,-9845761,-38618,-38618,-38618,-38618,-16776961,-16776961,-16776961,-38618,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-38618,-38618,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-38618,-16776961,-16776961,-38618,-38618,-38618,-38618,-38618,-38618,-38618,-16776961,-16776961,-38618,-16776961,-38618,-38618,-16776961,-16776961,-16776961,-38618,-38618,-38618,-38618,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-38618,-38618,-38618,-16776961,-16776961,-38618,-38618,-16776961,-38618,-16776961,-38618,-16776961,-38618,-38618,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-13793281,-38618,-38618,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-38618,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-38618,-16776961,-16776961,-16776961,-38618,-13793281,-16776961,-38618,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-16776961,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-38618,-16776961,-16776961,-16776961,-16776961,-38618,-38618,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-38618,-38618,-16776961,-16776961,-38618,-38618,-16776961,-38618,-38618,-38618,-38618,-38618,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-38618,-38618,-16776961,-16776961,-16776961,-13793281,-13793281,-38618,-38618,-16776961,-13793281,-13793281,-16776961,-16776961,-16776961,-16776961,-16776961,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-13778067,-38618,-38618,-16776961,-16776961,-16776961,-16776961,-38618,-16776961,-16776961,-16776961,-13778067,-13778067,-38618,-38618,-38618,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-13778067,-13778067,-13778067,-13778067,-9830547,-38618,-38618,-38618,-13778067,-13778067,-38618,-38618,-38618,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9830547,-9830547,-9830547,-13778067,-9830547,-13778067,-13778067,-9830547,-9830547,-13778067,-13778067,-13778067,-14768787,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-9830547,-9830547,-9830547,-9830547,-13778067,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-13778067,-9830547,-9830547,-9830547,-9830547,-9830547,-13778067,-13778067,-13778067,-13778067,-14768787,-9830547,-14768787,-9830547,-14768787,-9830547,-14768787,-13778067,-13778067,-13778067,-9830547,-9830547,-9830547,-13778067,-13778067,-13778067,-9830547,-9830547,-9830547,-13778067,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-13778067,-9830547,-9830547,-9830547,-9830547,-9830547,-13778067,-13778067,-14768787,-14768787,-14768787,-9830547,-14768787,-13778067,-13778067,-9830547,-9830547,-13778067,-13778067,-9830547,-9830547,-9830547,-9830547,-13778067,-13778067,-13778067,-13778067,-9830547,-9830547,-13778067,-13778067,-13778067,-13778067,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-13778067,-13778067,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-14768787,-13778067,-9830547,-13778067,-13778067,-13778067,-13778067,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-14768787,-14768787,-13778067,-9830547,-9830547,-9830547,-13778067,-9845761,-9845761
        ],
        [
-9845761,-13778067,-13778067,-13778067,-9830547,-13778067,-14768787,-9830547,-14768787,-14768787,-14768787,-14768787,-9830547,-14768787,-13778067,-14768787,-13778067,-14768787,-14768787,-9830547,-13778067,-9830547,-9830547,-13778067,-13778067,-9830547,-9830547,-13778067,-13778067,-9830547,-9830547,-9830547,-9830547,-9830547,-13778067,-14768787,-9830547,-14768787,-9845761,-9845761
        ],
        [
-13778067,-9830547,-9830547,-13778067,-9830547,-9830547,-14768787,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-13778067,-9830547,-9830547,-9830547,-9830547,-9830547,-9830547,-13778067,-14768787,-9830547,-9830547,-13778067,-13778067,-13778067,-13778067,-13778067,-9830547,-9830547,-13778067,-14768787,-13778067,-9830547,-9830547,-13778067,-9845761,-9845761
        ],
        [
-9830547,-13778067,-13778067,-13778067,-13778067,-9830547,-13778067,-13778067,-14768787,-13778067,-13778067,-13778067,-14768787,-14768787,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-9830547,-9830547,-9830547,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-14768787,-13778067,-9830547,-9830547,-9830547,-9830547,-13778067,-13778067,-13778067,-13778067,-9845761
        ],
        [
-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067,-13778067
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-13778067,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],
        [
-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761,-9845761
        ],

    ],
});

var colorGrid = function(config)
{
    this.xPos = config.xPos;
    this.yPos = config.yPos;
    
    this.gridSize = config.gridSize || 10;
    
    this.sqwidth = config.width;
    this.sqheight = config.height;
    
    this.backcolor = config.backcolor || color(255, 255, 255);
    this.selectedcolor = config.selectedcolor || color(255, 0, 0);
    this.cells = [];
    this.selectedPic = 0;
    this.maxCols = 65;
    this.maxRows = 65;
    
    this.name = config.name || savePictures.length.toString();
    
    this.calcDims = function()
    {
        this.width = this.cells[this.selectedPic].length * this.gridSize;
        this.height = this.cells[this.selectedPic][0].length * this.gridSize;
    };
    
    this.editSavedPicture = function(input)
    {
        this.name = input.name;
        this.cells = [input.pixels];
        this.backColor = input.backColor || config.backColor;
        this.refresh();
        this.gridSize = input.pixelSize || config.gridSize;
    };
    
    this.prepare = function()
    {
        this.name = config.name || savePictures.length.toString();
        this.cells[this.selectedPic] = [];
        for(var col = 0; col < this.sqheight; col++)
        {
            this.cells[this.selectedPic].push([]);
        }
        for(var col = 0; col < this.cells[this.selectedPic].length; col++)
        {
            for(var row = 0; row < this.sqwidth; row++)
            {
                this.cells[this.selectedPic][col].push(this.backcolor);
            }
        }
        this.calcDims();
    };
    this.draw = function() 
    {
        for(var col = 0; col < this.cells[this.selectedPic].length; col++)
        {
            for(var row = 0; row < this.cells[this.selectedPic][0].length; row++)
            {
                var cells = this.cells[this.selectedPic][col][row];
                fill(cells);
                var cellX = ((row * this.gridSize));
                var cellY = ((col * this.gridSize));
                rect(this.xPos + cellX, this.yPos + cellY, 
                this.gridSize, this.gridSize);
            }
        }
    };
    
    this.colRowText = function(xPos, yPos)
    {
        fill(settings.color);
        rect(xPos, yPos, 80, 10);
        var col = getPosOnGrid(this).xPos;
        var row = getPosOnGrid(this).yPos;
        textSize(10);
        fill(0, 0, 0);
        text("col : " + col + " row : " + row, xPos, yPos + 10);
    };
    
    this.getCells = function(index)
    {
        var cells = [];
        for(var col = 0; col < this.cells[index].length; col++)
        {
            cells.push([]);
            for(var row = 0; row < this.cells[index][0].length; row++)
            {
                cells[col].push(this.cells[index][col][row]);
            }
        }
        return cells;
    };
    
    this.refresh = function()
    {
        this.limitGrid();
        this.changeBackcolor(this.backcolor);
        this.calcDims();
    };
    
    this.limitGrid = function()
    {
        this.gridSize = constrain(this.gridSize, 2, 100);
        var cells = this.cells[this.selectedPic];
        if(cells[0].length <= 1)
        {
            this.addRow();
        }
        if(cells[0].length > (height / this.gridSize) || 
        cells[0].length > this.maxCols)
        {
            this.subRow();
        }
        if(cells.length <= 1)
        {
            this.addRow();
        }
        if(cells.length > (width / this.gridSize) || cells.length > this.maxRows)
        {
            this.subCol();
        }
    };
    this.autoFillGrid = function()
    {
        var cells = this.cells[this.selectedPic];
        var cols = floor(width / this.gridSize) - (cells.length - 1);
        cols = constrain(cols, 0, this.maxCols);
        for(var col = 0; col < cols; col++)
        {
            this.addCol();    
        }
        var rows = floor(height / this.gridSize) - (cells[0].length - 1);
        rows = constrain(rows, 0, this.maxRows);
        for(var row = 0; row < rows; row++)
        {
            this.addRow();    
        }
    };
    this.resetGrid = function()
    {
        this.gridSize = 10;
        this.autoFillGrid();
        this.refresh();
    };
    
    this.changeBackcolor = function(backcolor)
    {
        this.lastBackcolor = this.backcolor;
        this.backcolor = backcolor;
        var cells = this.cells[this.selectedPic];
        
        for(var col = 0; col < cells.length; col++)
        {
            for(var row = 0; row < cells[col].length; row++)
            {
                if(cells[col][row] === this.lastBackcolor)
                {
                    cells[col][row] = this.backcolor;   
                }
            }
        }
    };
    
    var Print = "";
    this.printCode = function()
    {
        //_clearLogs();
        Print = ""; //reset the string
        Print += "savePictures.add({\n";
        Print += "    name : " + (this.name || savePictures.length) + ",\n";
        Print += "    pixelSize : " + this.gridSize + ",\n";
        Print += "    backColor : "  + this.backColor + ",\n";
        Print += "    pixels : [\n";
        for(var col = 0; col < this.cells[this.selectedPic].length; col++)
        {
            Print += "        [\n";
            for(var row = 0; row < this.cells[this.selectedPic][col].length; row++)
            {
                var cells = this.cells[this.selectedPic][col][row];
                var val = cells;
                Print +=  val;
                if(row < this.cells[this.selectedPic][col].length - 1)
                {
                    Print += ","; 
                }
            }
            Print += "\n        ],\n";
        }
        Print += "\n    ],\n";
        Print += "});";
        println(Print);
    };
    this.printInstructions = function() 
    {
        //_clearLogs();
        Print = "";
        Print += "Step 1 : Go into the code and press ctrl-h.\n";
        Print += "Step 2 : Paste in the top bar : \"save" + "Pics\".\n";
        Print += "Step 3 : In the program go to the menu>save\n";
        Print += "Step 4 : Copy all the code that pops up in the console\n" +
        "and put there in the code.\n";
        Print += "Step 5 : Click save. (In the editor this time)\n\n";
        Print += "If you did all 5 steps correctly you should be to \n" + 
        "find your image in menu>images.";
        println(Print);
    };
    
    this.makeChange = function(code)
    {
        var cells = this.getCells(this.selectedPic);
        cells = code(cells);
        this.selectedPic++;
        this.cells[this.selectedPic] = cells;
    };
    this.undoChange = function()
    {
        if(this.selectedPic > 0)
        {
            this.selectedPic--;
        }
    };
    this.redoChange = function()
    {
        if(this.selectedPic < this.cells.length - 1)
        {
            this.selectedPic++;
        }
    };
    
    this.replacecolor = function()
    {
        var pos = getPosOnGrid(this);
        var pos2 = getPosOnGrid({
            xPos : pos.xPos + 4,
            yPos :  pos.yPos + 4,
            width : this.width,
            height : this.height,
        });
        var cellX = pos.xPos;
        var cellY = pos.yPos;
        var cells = this.getCells(this.selectedPic);
        if(this.cells[this.selectedPic][cellY][cellX] === this.backcolor)
        {
             cells[cellY][cellX] = this.selectedcolor;
        }
        else if(this.cells[this.selectedPic][cellY][cellX] !== this.backcolor)
        {
             cells[cellY][cellX] = this.backcolor;
        }
        this.selectedPic++;
        this.cells[this.selectedPic] = cells;
    };
    this.putcolor = function()
    {
        var cellX = getPosOnGrid(this).xPos;
        var cellY = getPosOnGrid(this).yPos;
        var cells = this.getCells(this.selectedPic);
        cells[cellY][cellX] = this.selectedcolor;
        this.selectedPic++;
        this.cells[this.selectedPic] = cells;
    };
    
    this.addCol = function()
    {
        var arr = [];
        for(var i = 0; i < this.cells[this.selectedPic][0].length; i++)
        {
            arr.push(this.backcolor);
        }
        this.cells[this.selectedPic].push(arr);
    };
    this.subCol = function()
    {
        if(this.cells[this.selectedPic].length > 1)
        {
            this.cells[this.selectedPic].pop();
        }
    };
    
    this.addRow = function()
    {
        for(var i = 0; i < this.cells[this.selectedPic].length; i++)
        {
            this.cells[this.selectedPic][i].push(this.backcolor);
        }
    };
    this.subRow = function()
    {
        for(var i = 0; i < this.cells[this.selectedPic].length; i++)
        {
            this.cells[this.selectedPic][i].pop();
        }
    };
};
var colorSelector = function(xPos, yPos, cols, rows, gridSize)
{
    this.xPos = xPos;
    this.yPos = yPos;
    this.cols = cols;
    this.rows = rows;
    this.gridSize = gridSize;
    
    this.width = this.cols * this.gridSize;
    this.height = this.rows * this.gridSize;
    this.fillcolors = []; 
    this.otherFill = 255/2;
    this.hoveringcolor = 255/2;
    this.selectedcolor = 255/2;
    
    var iconRow = {
        xPos : this.xPos,
        yPos : (this.yPos + (this.height)),
        width  : 30,
        height : 30,
    };
    iconRow.row = function(amt)
    {
        return iconRow.xPos + iconRow.width * amt;
    };
    iconRow.col = function(amt)
    {
        return iconRow.yPos + iconRow.height * amt;
    };
    
    this.buttons = createArray(Button);
    this.buttons.addMult({
        exit : {
            xPos   : iconRow.row(0),
            yPos   : iconRow.yPos,
            width  : iconRow.width,
            height : iconRow.height,
            
            XDiv : 3.5,
            color : settings.color,
            
            name : "exit",
            label : "x",
        },
        up : {
            xPos   : iconRow.row(1),
            yPos   : iconRow.yPos,
            width  : iconRow.width,
            height : iconRow.height,
            
            XDiv : 0,
            color : settings.color,
            
            name : "up",
            label : "+",
        },
        down : {
            xPos   : iconRow.row(2),
            yPos   : iconRow.yPos,
            width  : iconRow.width,
            height : iconRow.height,
            
            color  : settings.color,
            
            name : "down",
            label : "-",
        },
        select : {
            xPos   : iconRow.row(6),
            yPos   : iconRow.yPos,
            width  : 50,
            height : iconRow.height,
            
            XDiv : 10,
            color : settings.color,
            
            name : "select",
            label : "Select",
        },
    });
    this.selectionCell = {
        xPos : 0,
        yPos : 0,
    };

    this.draw = function() 
    {
        this.fillcolors = []; 
        noStroke();
        for(var cols = 0; cols < this.cols; cols++)
        {
            this.fillcolors.push([]); 
            for(var rows = 0; rows < this.rows; rows++)
            {
                var xP = cols * this.gridSize;
                var yP = rows * this.gridSize;
                var toFill = color(xP, yP, this.otherFill);
                this.fillcolors[cols].push(toFill); 
                fill(toFill);
                rect(this.xPos + xP, this.yPos + yP, this.gridSize, this.gridSize);
            }
        }
        Stroke(0, 0, 0);
        if(mouseIsPressed)
        {
            if(IsMouseInside(this.buttons.getObj("up")))
            {
                this.otherFill++;
            }
            if(IsMouseInside(this.buttons.getObj("down")))
            {
                this.otherFill--;
            }
            if(IsMouseInside(this) && !IsMouseInside(this.buttons.getObj("select")))
            {
                this.selectedcolor = this.getcolor();
            }
        }
        
        this.otherFill = constrain(this.otherFill, 0, 255);
        if(IsMouseInside(this))
        {
            this.hoveringcolor = this.getcolor();
        }
        
        this.buttons.draw();
        
        //otherFill text Number
        fill(settings.color);
        rect(iconRow.row(3), iconRow.yPos, iconRow.width, iconRow.height);
        fill(0);
        text(round(this.otherFill), iconRow.row(3), 
        iconRow.yPos + iconRow.width * 0.7);
        
        //color Indicaters
        fill(this.hoveringcolor);
        rect(iconRow.row(4), iconRow.yPos, iconRow.width, iconRow.height);
        fill(this.selectedcolor);
        rect(iconRow.row(5), iconRow.yPos, iconRow.width, iconRow.height);
        
        noFill();
        Stroke(0, 0, 0);
        rect(this.selectionCell.xPos, this.selectionCell.yPos, 
        this.gridSize, this.gridSize);
    };
    this.getcolor = function()
    {
        var cellX = getPosOnGrid(this).xPos;
        var cellY = getPosOnGrid(this).yPos;
        
        if(cellX !== false && cellY !== false)
        {
            if(mouseIsPressed)
            {
                this.selectionCell = {
                    xPos : (cellX * this.gridSize) + this.xPos, 
                    yPos : (cellY * this.gridSize) + this.yPos, 
                };
            }
            if(this.fillcolors.length > 0)
            {
                return this.fillcolors[cellX][cellY];
            }   
        }
    };
};

var colorGrid = new colorGrid({
    xPos : 0,
    yPos : 0,
    width : 40,
    height : 40,
    
    gridSize : 10,
    selectedcolor : color(153, 75, 75),
}); 
colorGrid.prepare();
var colorSelector = new colorSelector(0, 0, 18, 18, 15);

var scenes = {
    scene  : "maker",
    temp : {},
    
    menu : {
        color : color(125, 125, 125, 200),
        setup : function()
        {
            buttons.addMult({
                exit : {
                    xPos : 10,
                    yPos : 55,
                    width : 20,
                    height : 20,
                    
                    XDiv : 4,
                    
                    color : scenes.menu.color,
                    
                    name : "exit",
                    label : "x",
                },
                back : {
                    xPos : 30,
                    yPos : 55,
                    width : 25,
                    height : 20,
                    
                    XDiv : 9,
                    
                    color : scenes.menu.color,
                    
                    name : "back",
                    label : "<<",
                },
                forward : {
                    xPos : 360,
                    yPos : 55,
                    width : 25,
                    height : 20,
                    
                    XDiv : 9,
                    
                    color : scenes.menu.color,
                    
                    name : "forward",
                    label : ">>",
                },
            });
        },
        draw : function(name) 
        {
            fill(143, 143, 143, 125);
            rect(0, 50, 400, 250);
            fill(0, 0, 0);
            textSize(25);
            textAlign(CENTER);
            text(name, 200, 80);
        },
    },
    scenes : {
        "maker"    : {
            setup : function()
            {
                buttons.addMult({
                    drop : {
                        xPos : 0,
                        yPos : 370,
                        width  : 20,
                        height : 30,
                        
                        XDiv  : 3,
                        yDiv : 6,
                        color : settings.color,
                        
                        name  : "drop",
                        label : "x",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                    menu : {
                        xPos : 20,
                        yPos : 370,
                        width : 45,
                        height : 30,
                        
                        XDiv : 15,
                        color : settings.color,
                        
                        name  : "menu",
                        label : "menu",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                    colors : {
                        xPos : 65,
                        yPos : 370,
                        width  : 50,
                        height : 30,
                        
                        XDiv  : 15,
                        color : settings.color,
                        
                        name  : "colors",
                        label : "colors",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                    getcolor : {
                        xPos : 115,
                        yPos : 370,
                        width  : 65,
                        height : 30,
                        
                        XDiv  : 15,
                        color : settings.color,
                        
                        name  : "getcolor",
                        label : "getcolor",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                    undo : {
                        xPos : 180,
                        yPos : 370,
                        width  : 40,
                        height : 30,
                        
                        XDiv  : 15,
                        color : settings.color,
                        
                        name  : "undo",
                        label : "undo",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                    undoFast : {
                        xPos : 220,
                        yPos : 370,
                        width  : 70,
                        height : 30,
                        
                        XDiv  : 15,
                        color : settings.color,
                        
                        name  : "undoFast",
                        label : "undoFast",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                    redo : {
                        xPos : 290,
                        yPos : 370,
                        width  : 40,
                        height : 30,
                        
                        XDiv  : 15,
                        color : settings.color,
                        
                        name  : "redo",
                        label : "redo",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                    redoFast : {
                        xPos : 330,
                        yPos : 370,
                        width  : 70,
                        height : 30,
                        
                        XDiv  : 15,
                        color : settings.color,
                        
                        name  : "redoFast",
                        label : "redoFast",
                        
                        mem : {
                            downYPos : width - 5,
                        }
                    },
                });
                buttons.toggleDrop = function()
                {
                    for(var i = 0; i < this.length; i++)
                    {
                        var temp = this[i].yPos; 
                        this[i].yPos = this[i].mem.downYPos;
                        this[i].mem.downYPos = temp;
                    }
                };
            },
            draw : function()
            { 
                if(mouseIsPressed && buttons.getObj("drop").yPos < width - 5)
                {
                    if(IsMouseInside(buttons.getObj("undoFast")))
                    {
                        colorGrid.undoChange();
                    }
                    if(IsMouseInside(buttons.getObj("redoFast")))
                    {
                        colorGrid.redoChange();
                    }
                }
                colorGrid.colRowText(0, 0);
            },
            mouseReleased : function()
            {
                if(IsMouseInside(buttons.getObj("drop")))
                {
                    buttons.toggleDrop();  
                }
                if(buttons.getObj("drop").yPos < width - 5)
                {
                    if(IsMouseInside(buttons.getObj("colors")))
                    {
                        scenes.getScene("colors").selectCode = function()
                        {
                            colorGrid.selectedcolor = colorSelector.selectedcolor;
                            scenes.setScene("maker");
                        };
                        scenes.setScene("colors");
                    }
                    if(IsMouseInside(buttons.getObj("getcolor")))
                    {
                        settings.stroke.lastStrokeOn = settings.stroke.strokeOn; 
                        settings.stroke.strokeOn = true;
                        scenes.setScene("getcolor");
                    }
                    if(IsMouseInside(buttons.getObj("undo")))
                    {
                        colorGrid.undoChange();
                    }
                    if(IsMouseInside(buttons.getObj("redo")))
                    {
                        colorGrid.redoChange();
                    }
                    scenes.setSceneOnButton({scene : "menu",  button : "menu"});
                }
            },
            mouseDragged : function()
            {
                if(!buttons.IsMouseInsideAny())
                {
                    colorGrid.putcolor();
                }
            },
            mousePressed : function()
            {
                if(!buttons.IsMouseInsideAny())
                {
                    colorGrid.replacecolor();
                }
            },
        },
        "getcolor" : {
            setup : function()
            {
                cursor("none");
            },
            close : function()
            {
                Stroke(0, 0, 0);
                cursor(ARROW);
            },
            draw : function()
            {
                var clr = get(mouseX, mouseY);
                fill(clr);
                Stroke(0, 0, 0);
                ellipse(mouseX, mouseY, 10, 10);
                noStroke();
            },
            mouseReleased : function()
            {
                colorGrid.selectedcolor = get(mouseX, mouseY);
                settings.stroke.strokeOn = settings.stroke.lastStrokeOn;
                scenes.setScene("maker");
            },
        },
        "colors"   : {
            setup : function()
            {
                settings.stroke.lastStrokeOn = settings.stroke.strokeOn; 
                settings.stroke.strokeOn = true;   
            },
            draw : function()
            {
                colorSelector.draw();
            },
            mousePressed : function()
            {
                if(IsMouseInside(colorSelector.buttons.getObj("select")))
                {
                    settings.stroke.strokeOn = settings.stroke.lastStrokeOn;
                    Stroke(0, 0, 0);
                    scenes.getScene("colors").selectCode();
                }
                if(IsMouseInside(colorSelector.buttons.getObj("exit")))
                {
                    settings.stroke.strokeOn = settings.stroke.lastStrokeOn;
                    Stroke(0, 0, 0);
                    scenes.setScene(scenes.getScene("colors").exitScene);
                    scenes.setScene("maker");
                }
            },
        },
        "clear"    : {
            setup : function()
            {
                scenes.temp.buttonBox = new ButtonBox({
                    xPos : 110,
                    yPos : 150,
                    width : 180,
                    height : 80,
                    
                    color : color(143, 143, 143, 125),
                    
                    drawOn : function()
                    {
                        textSize(14);
                        fill(0, 0, 0, 200);
                        text("Are you sure you want to \nstart over?", 10, 20);
                    },
                    
                    buttons : {
                        no : {
                            xPos : 10,
                            yPos : 50,
                            width : 50,
                            height : 20,
                            
                            XDiv : 3,
                            
                            color : scenes.menu.color,
                            
                            name : "no",
                            label : "no",
                        },
                        yes  : {
                            xPos : 120,
                            yPos : 50,
                            width : 50,
                            height : 20,
                            
                            XDiv : 4,
                            
                            color : scenes.menu.color,
                            
                            name : "yes",
                            label : "yes",
                        },
                    },
                });
            },
            draw : function()
            {
                scenes.temp.buttonBox.draw();
            },
            mouseReleased : function()
            {
                if(IsMouseInside(scenes.temp.buttonBox.buttons.getObj("no")))
                {
                    scenes.setScene("menu");
                }
                if(IsMouseInside(scenes.temp.buttonBox.buttons.getObj("yes")))
                {
                    colorGrid.prepare();
                    scenes.setScene("maker");
                }
            },
        },
        
        "naming"   : {
            setup : function()
            {
                buttonBoxes.add({
                    xPos : 100,
                    yPos : 150,
                    width : 200,
                    height : 100,
                    
                    color : color(143, 143, 143, 125),
                    
                    drawOn : function()
                    {
                        fill(0, 0, 0);
                        textSize(20);
                        text("Naming", 10, 20);
                    },
                    
                    name : "naming",
                    
                    buttons : {
                        cancel : {
                            xPos : 10,
                            yPos : 70,
                            width : 50,
                            height : 20,
                            
                            XDiv : 10,
                            
                            color : scenes.menu.color,
                            
                            name : "cancel",
                            label : "cancel",
                        },
                        name  : {
                            xPos : 150,
                            yPos : 70,
                            width : 40,
                            height : 20,
                            
                            XDiv : 30,
                            color : scenes.menu.color,
                            
                            name  : "name",
                            label : "name",
                        },
                    },
                });
                textBoxes.add({
                    xPos : 110,
                    yPos : 180,
                    width : 180,
                    height : 20,
                    
                    textInfo : {
                        xPosOffset : 2,
                        yPosOffset : 3,
                        maxLength : 20,
                    },
                    
                    editText : function()
                    {
                        textSize(15);
                    },
                });
                textBoxes[0].setText(colorGrid.name);
            },
            mouseReleased : function()
            {
                var btnBox = buttonBoxes.getObj("naming");
                if(IsMouseInside(btnBox.buttons.getObj("cancel")))
                {
                    scenes.setScene("menu");
                }
                if(IsMouseInside(btnBox.buttons.getObj("name")))
                {
                    colorGrid.name = textBoxes[0].getText();
                    scenes.setScene("menu");
                }
            },
        },
        "menu"     : {
            setup : function()
            {
                buttons.addMult({
                    clear : {
                        xPos : 10,
                        yPos : 270,
                        width : 50,
                        height : 20,
                        
                        XDiv : 6,
                        color : scenes.menu.color,
                        
                        name : "clear",
                        label : "clear",
                    },
                    save : {
                        xPos : 350,
                        yPos : 265,
                        width : 45,
                        height : 30,
                        
                        XDiv : 10,
                        color : scenes.menu.color,
                        
                        name : "save",
                        label : "Save",
                    },
                    name : {
                        xPos : 170,
                        yPos : 265,
                        width : 50,
                        height : 30,
                        
                        XDiv : 10,
                        color : scenes.menu.color,
                        
                        name : "name",
                        label : "Name",
                    },
                    saveInstructions : {
                        xPos : 220,
                        yPos : 265,
                        width : 130,
                        height : 30,
                        
                        XDiv : 15,
                        color : scenes.menu.color,
                        
                        name : "saveInstructions",
                        label : "Save Instructions",
                    },
                });
                scenes.menu.setup();
            },
            draw : function()
            {
                scenes.menu.draw("Menu");
            },
            mouseReleased : function()
            {
                if(IsMouseInside(buttons.getObj("save")))
                {
                    colorGrid.printCode();
                }
                if(IsMouseInside(buttons.getObj("saveInstructions")))
                {
                    colorGrid.printInstructions();
                }
                scenes.setSceneOnButton({scene : "naming",  button : "name"});
                scenes.setSceneOnButton({scene : "clear",   button : "clear"});
                scenes.setSceneOnButton({scene : "maker",   button : "exit"});
                scenes.setSceneOnButton({scene : "settings",button : "forward"});
                scenes.setSceneOnButton({scene : "images",  button : "back"});
            },
        },
        "settings" : {
            setup : function()
            {
                buttons.addMult({
                    strokeOn : {
                        xPos : 10,
                        yPos : 170,
                        width : 90,
                        height : 30,
                        
                        XDiv : 9,
                        
                        color : scenes.menu.color,
                        
                        name : "strokeOn",
                        label : "stroke : On",
                    },
                    strokeOff : {
                        xPos : 10,
                        yPos : 170,
                        width : 90,
                        height : 30,
                        
                        XDiv : 9,
                        
                        color : scenes.menu.color,
                        
                        name : "strokeOff",
                        label : "stroke : Off",
                    },
                    changeBackcolor : {
                        xPos : 10,
                        yPos : 210,
                        width : 180,
                        height : 30,
                        
                        XDiv : 50,
                        
                        color : scenes.menu.color,
                        
                        name : "changeBackcolor",
                        label : "Change Background color",
                    },
                    autoFillGrid : {
                        xPos : 300,
                        yPos : 130,
                        width : 90,
                        height : 30,
                        
                        XDiv : 9,
                        
                        color : scenes.menu.color,
                        
                        name : "autoFillGrid",
                        label : "autoFill Grid",
                    },
                    reset : {
                        xPos : 230,
                        yPos : 130,
                        width : 50,
                        height : 30,
                        
                        XDiv : 9,
                        
                        color : scenes.menu.color,
                        
                        name : "reset",
                        label : "reset",
                    },
                });
                buttonBoxes.addMult({
                    gridSize : {
                        xPos : 230,
                        yPos : 250,
                        width : 160,
                        height : 30,
                        color : color(143, 143, 143, 125),
                        
                        name : "gridSize",
                        drawOn : function()
                        {
                            fill(0, 0, 0);
                            textSize(15);
                            text("GridSize : " + colorGrid.gridSize, 10, 20);
                        },
                        
                        buttons : {
                            minus : {
                                xPos : 110,
                                yPos : 5,
                                width : 20,
                                height : 20,
                                
                                XDiv : 0,
                                
                                color : scenes.menu.color,
                                
                                name : "minus",
                                label : "-",
                            },
                            plus : {
                                xPos : 130,
                                yPos : 5,
                                width : 20,
                                height : 20,
                                
                                XDiv : 0,
                                
                                color : scenes.menu.color,
                                
                                name : "plus",
                                label : "+",
                            },
                        },
                    },  
                    colorGridCols : {
                        xPos : 230,
                        yPos : 170,
                        width : 160,
                        height : 30,
                        color : color(143, 143, 143, 125),
                        
                        name : "colorGridCols",
                        drawOn : function()
                        {
                            fill(0, 0, 0);
                            textSize(15);
                            text("Cols : " + colorGrid.cells
                            [colorGrid.selectedPic][0].length, 10, 20);
                        },
                        
                        buttons : {
                            minus : {
                                xPos : 110,
                                yPos : 5,
                                width : 20,
                                height : 20,
                                
                                XDiv : 0,
                                
                                color : scenes.menu.color,
                                
                                name : "minus",
                                label : "-",
                            },
                            plus : {
                                xPos : 130,
                                yPos : 5,
                                width : 20,
                                height : 20,
                                
                                XDiv : 0,
                                
                                color : scenes.menu.color,
                                
                                name : "plus",
                                label : "+",
                            },
                        },
                    },
                    colorGridRows : {
                        xPos : 230,
                        yPos : 210,
                        width : 160,
                        height : 30,
                        color : color(143, 143, 143, 125),
                        
                        name : "colorGridRows",
                        drawOn : function()
                        {
                            fill(0, 0, 0);
                            textSize(15);
                            text("Rows : " + colorGrid.cells
                            [colorGrid.selectedPic].length, 10, 20);
                        },
                        
                        buttons : {
                            minus : {
                                xPos : 110,
                                yPos : 5,
                                width : 20,
                                height : 20,
                                
                                XDiv : 0,
                                
                                color : scenes.menu.color,
                                
                                name : "minus",
                                label : "-",
                            },
                            plus : {
                                xPos : 130,
                                yPos : 5,
                                width : 20,
                                height : 20,
                                
                                XDiv : 0,
                                
                                color : scenes.menu.color,
                                
                                name : "plus",
                                label : "+",
                            },
                        },
                    },
                });
                scenes.menu.setup();
            },
            draw : function()
            {
                if(settings.stroke.strokeOn)
                {
                    buttons.getObj("strokeOn").draw();
                }else{
                    buttons.getObj("strokeOff").draw();
                }
                scenes.menu.draw("settings");
                colorGrid.refresh();
            },
            mouseReleased : function()
            {
                if(settings.stroke.strokeOn && 
                IsMouseInside(buttons.getObj("strokeOn")))
                {
                    settings.stroke.strokeOn = false;
                    noStroke();
                }else{
                    if(IsMouseInside(buttons.getObj("strokeOff")))
                    {
                        settings.stroke.strokeOn = true;
                        Stroke(0, 0, 0);
                    }
                }
                
                if(IsMouseInside(buttons.getObj("autoFillGrid")))
                {
                    colorGrid.autoFillGrid();
                }
                
                /* Cols */
                var colsButtonBox = buttonBoxes.getObj("colorGridCols");
                var btn = colsButtonBox.buttons.getObj("plus");
                if(IsMouseInside(btn))
                {
                    colorGrid.addRow();
                }
                btn = colsButtonBox.buttons.getObj("minus");
                if(IsMouseInside(btn))
                {
                    colorGrid.subRow();
                }
                
                /* Rows */
                var rowsButtonBox = buttonBoxes.getObj("colorGridRows");
                btn = rowsButtonBox.buttons.getObj("plus");
                if(IsMouseInside(btn))
                {
                    colorGrid.addCol();
                }
                btn = rowsButtonBox.buttons.getObj("minus");
                if(IsMouseInside(btn))
                {
                    colorGrid.subCol();
                }
                

                /* GridSize */
                var gridSizeButtonBox = buttonBoxes.getObj("gridSize");
                btn = gridSizeButtonBox.buttons.getObj("plus");
                if(IsMouseInside(btn))
                {
                    colorGrid.gridSize++;
                }
                btn = gridSizeButtonBox.buttons.getObj("minus");
                if(IsMouseInside(btn))
                {
                    colorGrid.gridSize--;
                }
                
                if(IsMouseInside(buttons.getObj("changeBackcolor")))
                {
                    scenes.getScene("colors").selectCode = function()
                    {
                        colorGrid.changeBackcolor(colorSelector.selectedcolor);
                        scenes.setScene("settings");
                    };
                    scenes.getScene("colors").exitScene = "settings";
                    scenes.setScene("colors");
                }
                
                if(IsMouseInside(buttons.getObj("reset")))
                {
                    colorGrid.resetGrid();   
                }
                
                scenes.setSceneOnButton({scene : "maker", button : "exit"});
                scenes.setSceneOnButton({scene : "menu",  button : "back"});
                scenes.setSceneOnButton({scene : "images",button : "forward"});
            },
        },
        "images"   : {
            setup : function()
            {
                buttons.addMult({
                    leftPicture : {
                        xPos : 120,
                        yPos : 270,
                        width  : 30,
                        height : 30,
                        
                        XDiv : 9,
                        YDiv : 0.0,
                        textSize : 15,
                        color : scenes.menu.color,
                        
                        name  : "leftPicture",
                        label : "<<",
                    },
                    rightPicture : {
                        xPos : 250,
                        yPos : 270,
                        width  : 30,
                        height : 30,
                        
                        XDiv : 9,
                        YDiv : 0.0,
                        textSize : 15,
                        color : scenes.menu.color,
                        
                        name  : "rightPicture",
                        label : ">>",
                    },
                    edit : {
                        xPos : 150,
                        yPos : 270,
                        width  : 100,
                        height : 30,
                        
                        XDiv : 0,
                        YDiv : 0.0,
                        
                        textInfo : {
                           xPosOffset : 15,
                        },
                        
                        textSize : 15,
                        color : scenes.menu.color,
                        
                        name  : "edit",
                        label : "edit",
                    },
                });
                scenes.temp.infoNoImg = new Button({
                    xPos : 85,
                    yPos : 140,
                    width : 230,
                    height : 30,
                    
                    XDiv : 45,
                    
                    color : scenes.menu.color,
                    
                    name : "infoNoImg",
                    label : "There currently no saved images.",
                });
                scenes.temp.infoImgName = new Button({
                    xPos : 120,
                    yPos : 90,
                    width : 160,
                    height : 20,
                    
                    XDiv : 0,
                    
                    color : scenes.menu.color,
                    textInfo : {
                        xPosOffset : 35,    
                    },
                    editText : function()
                    {
                        textMode(CENTER);   
                    },
                    name : "infoNoImg",
                    label : "",
                });
                scenes.scenes.menu.picture = 0;
                scenes.menu.setup();
            },
            draw : function()
            {   
                scenes.menu.draw("Images");
               
                if(savePictures.length > 0)
                {
                    if(scenes.scenes.menu.picture < 0)
                    {
                        scenes.scenes.menu.picture = savePictures.length - 1;
                    }
                    if(scenes.scenes.menu.picture > savePictures.length - 1)
                    {
                        scenes.scenes.menu.picture = 0;
                    }
                    savePictures[scenes.scenes.menu.picture].draw(120, 110);
                    scenes.temp.infoImgName.label = savePictures
                    [scenes.scenes.menu.picture].name;
                }else{
                   scenes.temp.infoNoImg.draw();
                }
                scenes.temp.infoImgName.draw();
            },
            mouseReleased : function()
            {
                if(IsMouseInside(buttons.getObj("leftPicture")))
                {
                    scenes.scenes.menu.picture--;
                }
                if(IsMouseInside(buttons.getObj("rightPicture")))
                {
                    scenes.scenes.menu.picture++;
                }
                if(IsMouseInside(buttons.getObj("edit")))
                {
                    colorGrid.editSavedPicture(savePictures
                    [scenes.scenes.menu.picture]);
                }
                scenes.setSceneOnButton({scene : "settings", button : "back"});
                scenes.setSceneOnButton({scene : "menu",  button : "forward"});
                scenes.setSceneOnButton({scene : "maker", button : "exit"});
            },
        },
    },
    
    setSceneOnButton : function(config)
    {
        if(IsMouseInside(buttons.getObj(config.button)))
        {
            scenes.setScene(config.scene);
        }
    },
    setScene : function(scene)
    {
        if(scenes.scenes[scene] !== undefined)
        {
            if(scenes.scenes[scenes.scene].close !== undefined)
            {
                scenes.scenes[scenes.scene].close();
            }
            scenes.lastScene = scenes.scene;
            scenes.scene = scene;
            scenes.temp = {};
            buttons.removeAll();
            textBoxes.removeAll();
            buttonBoxes.removeAll();
            scenes.scenes[scene].setup();
        }
    },
    getScene : function(scene)
    {
        if(scenes.scenes[scene] !== undefined)
        {
            return scenes.scenes[scene];
        }else{
            return {};    
        }
    },
    runInOutFunc : function(scene, prop)
    {
        var scn = scene || scenes.scene;
        if(scenes.scenes[scn][prop] !== undefined)
        {
            scenes.scenes[scn][prop]();
        }
    },
    draw : function(scene)
    {
        scenes.runInOutFunc(scene, "draw");
    },
    
    mousePressed : function(scene)
    {
        scenes.runInOutFunc(scene, "mousePressed");
    },
    mouseReleased : function(scene)
    {
        scenes.runInOutFunc(scene, "mouseReleased");
    },
    mouseDragged : function(scene)
    {
        scenes.runInOutFunc(scene, "mouseDragged");
    },
    mouseOut : function(scene)
    {
        scenes.runInOutFunc(scene, "mouseOut");
    },
};
scenes.setScene("maker");

cursor(ARROW);
draw = function() 
{
    background(255, 255, 255);
    colorGrid.draw();
    buttons.draw();
    buttonBoxes.draw();
    textBoxes.draw();
    scenes.draw();
};

var lastMousePressed = mousePressed;
mousePressed = function()
{
    lastMousePressed();
    scenes.mousePressed(scenes.scene);
};
var lastMouseReleased = mouseReleased;
mouseReleased = function()
{
    lastMouseReleased();
    scenes.mouseReleased(scenes.scene);
    textBoxes.mouseReleased();  
};
var lastMouseDragged = mouseDragged;
mouseDragged = function()
{
    lastMouseDragged();
    scenes.mouseDragged(scenes.scene);
};
var lastMouseOut = mouseOut;
mouseOut = function()
{
    mouseOut();
    scenes.mouseOut(scenes.scene);
};
var lastKeyPressedFunc = keyPressed;
keyPressed = function()
{
    lastKeyPressedFunc();
    textBoxes.keyPressed();
};


    }
    if (typeof draw !== 'undefined') processing.draw = draw;
});
